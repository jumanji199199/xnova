"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã Solana Token Deployer
"""

import asyncio
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(str(Path(__file__).parent / "src"))

from src.core.token_creator import TokenCreator, TokenMetadata
from src.marketing.social_media import SocialMediaManager, TokenPromotion
from src.analytics.price_monitor import PriceMonitor
from src.utils.logger import setup_logging, get_logger

async def demo_token_creation():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–∫–µ–Ω–∞"""
    logger = get_logger(__name__)
    
    try:
        print("üöÄ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ Solana")
        print("=" * 50)
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ–∑–¥–∞—Ç–µ–ª—è —Ç–æ–∫–µ–Ω–æ–≤
        print("üìù –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è TokenCreator...")
        token_creator = TokenCreator()
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö —Ç–æ–∫–µ–Ω–∞
        metadata = TokenMetadata(
            name="Demo Token",
            symbol="DEMO",
            description="–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–µ–ø–ª–æ—è",
            image_url="https://via.placeholder.com/200x200/FF6B6B/FFFFFF?text=DEMO",
            website="https://demo-token.example.com",
            twitter="https://twitter.com/demo_token",
            telegram="https://t.me/demo_token"
        )
        
        print(f"üè∑Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞: {metadata.name} ({metadata.symbol})")
        print(f"üìÑ –û–ø–∏—Å–∞–Ω–∏–µ: {metadata.description}")
        
        # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ (–≤ devnet)
        print("‚è≥ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –≤ —Å–µ—Ç–∏ Solana...")
        token_info = await token_creator.create_token(
            metadata=metadata,
            initial_supply=1000000000,  # 1 –º–∏–ª–ª–∏–∞—Ä–¥ —Ç–æ–∫–µ–Ω–æ–≤
            decimals=9
        )
        
        if token_info:
            print("‚úÖ –¢–æ–∫–µ–Ω —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!")
            print(f"üìç –ê–¥—Ä–µ—Å mint: {token_info.mint_address}")
            print(f"üí∞ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: {token_info.total_supply:,}")
            print(f"üî¢ –î–µ—Å—è—Ç–∏—á–Ω—ã–µ –∑–Ω–∞–∫–∏: {token_info.decimals}")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–æ–∫–µ–Ω–∞")
            return
        
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
        await token_creator.close()
        
        print("\nüéâ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏: {e}")
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

async def demo_price_monitoring():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ü–µ–Ω"""
    print("\nüìä –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ü–µ–Ω")
    print("=" * 50)
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∞ —Ü–µ–Ω
        price_monitor = PriceMonitor()
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
        popular_tokens = [
            "EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v",  # USDC
            "Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB",  # USDT
            "mSoLzYCxHdYgdzU16g5QSh3i5K3z3KZK7ytfqcJm7So",   # mSOL
        ]
        
        token_names = ["USDC", "USDT", "mSOL"]
        
        for token_address, name in zip(popular_tokens, token_names):
            price_monitor.add_token_to_monitor(token_address, name)
            print(f"‚ûï –î–æ–±–∞–≤–ª–µ–Ω –≤ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥: {name}")
        
        print("\n‚è≥ –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–∏—Ö —Ü–µ–Ω...")
        
        # –ü–æ–ª—É—á–∞–µ–º —Ü–µ–Ω—ã —Ç–æ–∫–µ–Ω–æ–≤
        for token_address, name in zip(popular_tokens, token_names):
            price_data = await price_monitor.update_token_price(token_address)
            
            if price_data:
                print(f"üí∞ {name}: ${price_data.price_usd:.6f} | {price_data.price_sol:.6f} SOL")
                print(f"   üìä –û–±—ä–µ–º 24—á: ${price_data.volume_24h:,.2f}")
                print(f"   üîó –ò—Å—Ç–æ—á–Ω–∏–∫: {price_data.source}")
            else:
                print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ü–µ–Ω—É –¥–ª—è {name}")
        
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
        await price_monitor.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: {e}")

async def demo_social_media():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å —Å–æ—Ü–∏–∞–ª—å–Ω—ã–º–∏ —Å–µ—Ç—è–º–∏"""
    print("\nüì± –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞ –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö")
    print("=" * 50)
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π
        social_media = SocialMediaManager()
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–º–æ-–º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –¥–ª—è —Ç–æ–∫–µ–Ω–∞
        promotion = TokenPromotion(
            token_name="Demo Token",
            token_symbol="DEMO",
            token_address="DemoTokenAddress123456789",
            website="https://demo-token.example.com",
            description="–ò–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–µ–ø–ª–æ—è –∏ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è",
            key_features=[
                "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–µ–ø–ª–æ–π –≤ —Å–µ—Ç–∏ Solana",
                "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –ø–æ–ø—É–ª—è—Ä–Ω—ã–º–∏ DEX",
                "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö",
                "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ü–µ–Ω –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏",
                "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç—å"
            ]
        )
        
        print(f"üéØ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø—Ä–æ–º–æ-–º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –¥–ª—è {promotion.token_symbol}")
        print(f"üìù –û–ø–∏—Å–∞–Ω–∏–µ: {promotion.description}")
        print(f"üåü –ö–ª—é—á–µ–≤—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏: {len(promotion.key_features)} –ø—É–Ω–∫—Ç–æ–≤")
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç (–±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏)
        print("\nüìù –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π...")
        print("‚úÖ –û—Å–Ω–æ–≤–Ω–æ–π –ø–æ—Å—Ç –æ –∑–∞–ø—É—Å–∫–µ —Ç–æ–∫–µ–Ω–∞")
        print("‚úÖ –ü–æ—Å—Ç –æ –∫–ª—é—á–µ–≤—ã—Ö –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—è—Ö")
        print("‚úÖ –ü–æ—Å—Ç –æ —Ç–æ—Ä–≥–æ–≤–ª–µ –Ω–∞ DEX")
        print("‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤")
        
        print("\nüìÖ –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—Å—Ç–æ–≤ –Ω–∞ 7 –¥–Ω–µ–π...")
        await social_media.schedule_regular_posts(promotion, days=7)
        
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
        await social_media.close()
        
        print("‚úÖ –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤–∞—è –∫–∞–º–ø–∞–Ω–∏—è –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–∞!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞: {e}")

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏"""
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    setup_logging()
    
    print("üåü –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Solana Token Deployer!")
    print("–≠—Ç–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–∫–∞–∂–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã")
    print("=" * 60)
    
    try:
        # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–∫–µ–Ω–∞
        await demo_token_creation()
        
        # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ü–µ–Ω
        await demo_price_monitoring()
        
        # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π
        await demo_social_media()
        
        print("\n" + "=" * 60)
        print("üéä –í—Å–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("\n–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Ç–æ–∫–µ–Ω–∞:")
        print("1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –≤ config/settings.yaml")
        print("2. –î–æ–±–∞–≤—å—Ç–µ API –∫–ª—é—á–∏ –≤ .env —Ñ–∞–π–ª")
        print("3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python main.py interactive")
        
    except Exception as e:
        print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏: {e}")

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\nüí• –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
